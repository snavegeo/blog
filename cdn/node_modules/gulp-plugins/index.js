'use strict'

var stream = require('stream');

var obj = thru(function(_, transform, flush) {
	var t2 = new stream.Transform({objectMode: true});
	t2._transform = transform
	t2._flush = flush
	return t2
})

module.exports = function(opts) {
	return obj(function(file, enc, cb) {
		try {
			if (opts.collect) return opts.collect(file), cb()
			if (opts.contents && file.isBuffer()) {
				if (!file.contents.length) return console.log('blank file', file.relative), cb()
				file.contents = new Buffer(opts.contents(file.contents.toString()))
			}
			if (opts.ext)
				file.path = file.path.replace(/\.[^.]+$/, opts.ext)
			if (opts.file)
				opts.file(file, cb)
			else
				cb(null, file)
		} catch (err) {
			console.error(err)
			cb()
		}
	}, function(cb) {
		if (opts.done) {
			try {
				opts.done(this, cb)
			} catch (err) {
				console.error(err)
				cb()
			}
		} else cb()
	})
}

function thru(fn) {
	return function (opts, transform, flush) {
		if (typeof opts === 'function')
			flush = transform, transform = opts, opts = {}

		return fn(opts, transform, flush)
	}
}
